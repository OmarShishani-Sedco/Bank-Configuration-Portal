body {
    background-image: url('/Content/images/Background.jpg');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    min-height: 100vh;
    position: relative; /* Needed to contain the z-index stacking */
    z-index: 1;
}

    body::before {
        content: "";
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.5); /* darkness overlay */
        pointer-events: none;
        z-index: 0;
    }

.body-content {
    position: relative;
    z-index: 1; /* Sit above the overlay */
}


/* Set padding to keep content from hitting the edges */
.body-content {
    margin-top: 15px;
    padding-left: 15px;
    padding-right: 15px;
}

/* Override the default bootstrap behavior where horizontal description lists 
   will truncate terms that are too long to fit in the left column 
*/
.dl-horizontal dt {
    white-space: normal;
}

/* Set width on the form input elements since they're 100% wide by default */
input,
select,
textarea {
    max-width: 280px;
}

/*Custom CSS */
.glass-card {
    background: rgb(2 16 15 / 26%) !important;
    border-radius: 16px !important;
    box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1) !important;
    backdrop-filter: blur(9px) !important;
    -webkit-backdrop-filter: blur(9px) !important;
    border: 1px solid rgba(152, 210, 255, 0.24) !important;
}

.glass-bg {
    background: rgb(2 16 15 / 26%) !important;
    box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1) !important;
    backdrop-filter: blur(9px) !important;
    -webkit-backdrop-filter: blur(9px) !important;
    border: 1px solid rgba(152, 210, 255, 0.24) !important;
}
.form-select.glass-bg option {
    background-color: #333; 
    color: white;
}
/* * This class is for a container that centers its content (like a form or card) both 
 * vertically on the page. It ensures the content takes up a significant 
 * portion of the viewport height on any screen size.
 */
.form-container {
    min-height: 80vh;
}

/* * This class is for a card element that needs to be responsive while staying within a 
 * maximum width on larger screens. It's useful for forms, modal dialogs, or login screens.
 */
.responsive-card {
    max-width: 450px;
    width: 100%;
}
/*
* This class is specifically for flexbox child elements.
* It ensures that an element with 'overflow-auto' (or similar)
* will not grow past its container, preventing layout issues.
*/
.flex-scrollable {
    min-height: 0;
}
/*
* This class creates a container with a fixed maximum height.
* If the content inside exceeds this height, it will become
* scrollable, preventing the layout from breaking.
*/
.scrollable-list {
    max-height: 200px;
    overflow-y: auto;
}
.error-container {
    max-width: 600px;
}
.app-title {
    max-width: 20vw;
}
.user-title {
    max-width: 30vw;
}
.pagination-field {
    width: 80px;
}





