@model Bank_Configuration_Portal.Models.BranchListViewModel
@using Bank_Configuration_Portal.Resources

@{
    ViewBag.Title = Language.Branch_Index_Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var lang = System.Threading.Thread.CurrentThread.CurrentUICulture.TwoLetterISOLanguageName;

}

<div class="container py-4">

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success fadeout3s">@TempData["Success"]</div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger fadeout3s">@TempData["Error"]</div>
    }
    @if (TempData["Info"] != null)
    {
        <div class="alert alert-info fadeout3s">@TempData["Info"]</div>
    }
    <div class="glass-card p-4 mb-4 d-flex justify-content-between align-items-center shadow-sm">
        <h2 class="mb-0">@Language.Branch_Index_Title</h2>
        @Html.ActionLink(Language.Branch_Create_Button, "Create", "Branch", null, new { @class = "btn btn-primary" })
    </div>

    <div class="glass-card p-3 mb-4 shadow-sm">
        @using (Html.BeginForm("Index", "Branch", FormMethod.Get, new { @class = "row g-3 align-items-end" }))
        {
            <div class="col-md-5">
                @Html.Label("searchTerm", Language.Search_Name_Label, new { @class = "form-label" })
                @Html.TextBox("searchTerm", Model.SearchTerm, new { @class = "form-control glass-bg", placeholder = Language.Search_Name_Placeholder })
            </div>

            <div class="col-md-3">
                @Html.Label("isActive", Language.IsActive_Label, new { @class = "form-label" })
                @Html.DropDownList("isActive",
                    new SelectList(new[]
                    {
                        new { Value = "", Text = Language.Select_Button },
                        new { Value = "true", Text = Language.Active_Label },
                        new { Value = "false", Text = Language.Inactive_Label }
                    }, "Value", "Text", Model.IsActive?.ToString().ToLower()),
                    new { @class = "form-select glass-bg" })
            </div>

            <div class="col-md-4 d-grid gap-2 d-md-flex justify-content-md-end">
                <button type="submit" class="btn btn-primary"><i class="bi bi-search"></i> @Language.Search_Button</button>
                <a href="@Url.Action("Index", "Branch")" class="btn btn-secondary"><i class="bi bi-x-circle"></i> @Language.Clear_Button</a>
            </div>
        }
    </div>


    @if (!Model.Branches.Any())
    {
        <div class="text-muted text-center">@Language.NoRecordsFound</div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var branch in Model.Branches)
            {
                <div class="col">
                    <div class="card glass-card h-100 shadow-sm">
                        <div class="card-body">
                            @if (lang == "ar")
                            {
                                <h5 class="card-title">@branch.NameArabic</h5>
                                <h6 class="card-subtitle mb-2 text-muted">@branch.NameEnglish</h6>
                            }
                            else
                            {
                                <h5 class="card-title">@branch.NameEnglish</h5>
                                <h6 class="card-subtitle mb-2 text-muted">@branch.NameArabic</h6>
                            }
                            <p class="mt-2">
                                <strong>@Language.IsActive_Label:</strong>
                                @if (branch.IsActive)
                                {
                                    <span class="badge bg-success">@Language.Active_Label</span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">@Language.Inactive_Label</span>
                                }
                            </p>

                            <div class="d-flex float-start mt-3">
                                @Html.ActionLink(Language.View_Counters_Button, "Index", "Counter", new { branchId = branch.Id }, new { @class = "btn btn-sm btn-info me-2" })
                                @Html.ActionLink(Language.Edit_Label, "Edit", new { id = branch.Id }, new { @class = "btn btn-sm btn-warning me-2" })

                                <button type="button" class="btn btn-sm btn-danger delete-btn"
                                        data-bs-toggle="modal" data-bs-target="#confirmDeleteModal"
                                        data-id="@branch.Id"
                                        data-rowversion="@(branch.RowVersion != null ? Convert.ToBase64String(branch.RowVersion) : string.Empty)">
                                    @Language.Delete_Label
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    @if (Model.TotalPages > 1)
    {
        @Html.Partial("_Pagination", new Bank_Configuration_Portal.Models.PaginationViewModel
    {
        CurrentPage = Model.CurrentPage,
        TotalPages = Model.TotalPages,
        ActionName = "Index",
        ControllerName = "Branch"
    })

    }
</div>

@Html.Partial("_DeleteModals", new Bank_Configuration_Portal.Models.DeleteModalViewModel
{
    ControllerName = "Branch",
    ConcurrencyErrorMessage = Language.Branch_Delete_Concurrency_Error
})

@section scripts {
    @Html.Partial("_ConcurrencyScript")
}




